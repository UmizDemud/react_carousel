{"version":3,"sources":["components/Carousel.tsx","components/Options/Input/Input.tsx","components/Options/Options.tsx","App.tsx","index.tsx"],"names":["Carousel","state","selected","size","props","images","length","prevProps","infinite","this","setState","prev","step","frameSize","list","itemWidth","animationDuration","determineHidden","index","i","determineTransform","className","style","height","map","img","transform","transition","opacity","width","src","alt","toString","onClick","handlePrev","type","disabled","handleNext","React","Component","Input","useState","error","setError","dimensionChecks","name","e","val","parseInt","target","value","handleChange","htmlFor","id","onBlur","placeholder","onChange","checked","Options","inputs","sS","Number","Boolean","inp","App","setStep","setFrameSize","setItemWidth","setAnimationDuration","setInfinite","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a36df9bb.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  selected: number;\n  size: number;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    selected: 0,\n    size: this.props.images.length || 0,\n  };\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.infinite !== this.props.infinite) {\n      this.setState({\n        selected: 0,\n      });\n    }\n  }\n\n  handlePrev(): void {\n    this.setState((prev => {\n      let selected;\n\n      if (this.props.infinite) {\n        selected = prev.selected - this.props.step < 0\n          ? prev.selected - this.props.step + prev.size\n          : prev.selected - this.props.step;\n      } else {\n        selected = prev.selected - this.props.step <= 0\n          ? 0\n          : prev.selected - this.props.step;\n      }\n\n      return {\n        selected,\n      };\n    }));\n  }\n\n  handleNext(): void {\n    this.setState((prev => {\n      let selected;\n\n      if (this.props.infinite) {\n        selected = (prev.selected + this.props.step >= prev.size\n          ? prev.selected + this.props.step - prev.size\n          : prev.selected + this.props.step);\n      } else {\n        selected = (prev.selected + this.props.step\n          > prev.size - this.props.frameSize)\n          ? prev.size - this.props.frameSize\n          : prev.selected + this.props.step;\n      }\n\n      return {\n        selected,\n      };\n    }));\n  }\n\n  render() {\n    const {\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n      images,\n    } = this.props;\n\n    const {\n      selected,\n      size,\n    } = this.state;\n\n    const determineHidden = (index: number) => {\n      for (let i = 0; i < frameSize; i += 1) {\n        if (selected + i >= size) {\n          if (selected + i - size === index) {\n            return 1;\n          }\n        } else if (selected + i === index) {\n          return 1;\n        }\n      }\n\n      return 0;\n    };\n\n    const determineTransform = (index: number) => { // selected: 9, index: 2\n      for (let i = 0; i < frameSize; i += 1) {\n        if (selected + i >= size) {\n          if (selected + i - size === index) {\n            return `rotateY(${-10 + ((i * 20) / (frameSize - 1))}deg)`;\n          }\n        } else if (selected + i === index) {\n          return `rotateY(${-10 + ((i * 20) / (frameSize - 1))}deg)`;\n        }\n      }\n\n      if (selected - this.props.step < 0) {\n        if (selected - this.props.step + size <= index) {\n          return 'rotateY(-180deg)';\n        }\n      }\n\n      if (selected + frameSize + this.props.step >= size) {\n        if (index <= selected + frameSize + this.props.step - size) {\n          return 'rotateY(180deg)';\n        }\n      }\n\n      if (index < selected) {\n        return 'rotateY(-180deg)';\n      }\n\n      if (index > selected + frameSize) {\n        return 'rotateY(180deg)';\n      }\n\n      return 'rotateY(180deg)';\n    };\n\n    let list;\n\n    if (infinite) {\n      list = (\n        <ul\n          className=\"Carousel__list-inf\"\n          style={{\n            height: `${itemWidth}px`,\n          }}\n        >\n          {images.map((img, i) => (\n            <li\n              key={(i + 1).toString()}\n              className=\"Carousel__item-inf\"\n              style={{\n                transform: determineTransform(i),\n                transition: `transform ${animationDuration}s,\n                  opacity ${animationDuration}s ease-in-out`,\n                opacity: determineHidden(i),\n              }}\n            >\n              <img\n                width={itemWidth}\n                height={itemWidth}\n                src={img}\n                alt={(i + 1).toString()}\n              />\n            </li>\n          ))}\n        </ul>\n      );\n    } else {\n      list = (\n        <div\n          className={`Carousel__wrapper${infinite ? ' Carousel__wrapper-inf' : ''}`}\n          style={{ width: `${frameSize * itemWidth}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(-${selected * itemWidth}px)`,\n              transition: `transform ${animationDuration}s`,\n              height: `${itemWidth}px`,\n            }}\n          >\n            {images.map((img, i) => (\n              <li\n                key={(i + 1).toString()}\n                className=\"Carousel__item\"\n              >\n                <img\n                  width={itemWidth}\n                  height={itemWidth}\n                  src={img}\n                  alt={(i + 1).toString()}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Carousel\">\n        {list}\n\n        <div>\n          <button\n            className=\"Carousel__button\"\n            onClick={() => this.handlePrev()}\n            type=\"button\"\n            disabled={selected === 0 && !infinite}\n          >\n            Prev\n          </button>\n          <button\n            className=\"Carousel__button\"\n            data-cy=\"next\"\n            onClick={() => this.handleNext()}\n            type=\"button\"\n            disabled={selected >= size - frameSize\n              && !infinite}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n\n/**\n * A function to determine where the incoming items should be directed from.\n * Let's see if it will be implemented.\n  setPositions(towards: boolean) {\n    const {\n      frameSize,\n      step,\n      images,\n    } = this.props;\n\n    const {\n      size,\n      selected,\n    } = this.state;\n\n    this.setState({\n      position: images.map((_el, i) => {\n        if (towards) {\n          if (i >= selected + frameSize) {\n            if (selected + frameSize + step > size) {\n              if (selected + frameSize + step - size > i) {\n                return true;\n              }\n            } else {\n              return true;\n            }\n          }\n        }\n\n        if (i < selected) {\n          if (selected - step < 0) {\n            if (selected - step + size < i) {\n              return true;\n            }\n          } else {\n            return true;\n          }\n        }\n\n        return false;\n      }),\n    });\n  }\n\n */\n","import React, { useState } from 'react';\n\ntype Props = {\n  type: 'number' | 'boolean';\n  name: string;\n  id: string;\n  value: number | boolean;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n};\n\nexport const Input = (props: Props) => {\n  const [error, setError] = useState(false);\n\n  const dimensionChecks = (\n    name:string,\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const val = parseInt(e.target.value, 10);\n\n    if (name === 'Step') {\n      if (val >= 0 && val <= 5) {\n        setError(false);\n        props.handleChange(e);\n      } else {\n        setError(true);\n      }\n    } else if (name === 'Frame size') {\n      if (val >= 0 && val <= 5) {\n        setError(false);\n        props.handleChange(e);\n      } else {\n        setError(true);\n      }\n    } else if (name === 'Item width') {\n      if (val >= 0) {\n        setError(false);\n        props.handleChange(e);\n      } else {\n        setError(true);\n      }\n    } else if (name === 'Animation duration') {\n      if (val >= 0) {\n        setError(false);\n        props.handleChange(e);\n      } else {\n        setError(true);\n      }\n    } else {\n      props.handleChange(e);\n    }\n  };\n\n  if (props.type === 'number') {\n    return (\n      <label\n        htmlFor={`${props.id}Id`}\n        className={`Options__label${error ? ' Options__error' : ''}`}\n      >\n        {props.name}\n        :\n        <input\n          className=\"Options__input\"\n          onBlur={(e) => dimensionChecks(props.name, e)}\n          placeholder={props.value.toString()}\n          type={props.type}\n          name={props.name}\n          id={`${props.id}Id`}\n        />\n      </label>\n    );\n  }\n\n  if (props.type === 'boolean') {\n    return (\n      <label\n        htmlFor={`${props.id}Id`}\n        className=\"Options__label\"\n      >\n        Infinite:\n        <input\n          className=\"Options__input\"\n          onChange={(e) => dimensionChecks(props.name, e)}\n          checked={props.value as boolean}\n          type=\"checkbox\"\n          name=\"inf\"\n          id={`${props.id}Id`}\n        />\n      </label>\n    );\n  }\n\n  return <></>;\n};\n","import { Input } from './Input';\nimport './Options.scss';\n\ninterface Props {\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n  sS: {\n    step: React.Dispatch<React.SetStateAction<number>>,\n    frameSize: React.Dispatch<React.SetStateAction<number>>,\n    itemWidth: React.Dispatch<React.SetStateAction<number>>,\n    animationDuration: React.Dispatch<React.SetStateAction<number>>,\n    infinite: React.Dispatch<React.SetStateAction<boolean>>,\n  },\n}\n\nexport const Options = (props: Props) => {\n  const inputs:{\n    type: 'number' | 'boolean',\n    name: string,\n    id: string,\n    value: number | boolean,\n    handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  }[] = [\n    {\n      type: 'number',\n      name: 'Step',\n      id: 'step',\n      value: props.step,\n      handleChange: (e: React.ChangeEvent<HTMLInputElement>) => props.sS\n        .step(Number.parseInt(e.target.value, 10)),\n    },\n    {\n      type: 'number',\n      name: 'Frame size',\n      id: 'frame',\n      value: props.frameSize,\n      handleChange: (e: React.ChangeEvent<HTMLInputElement>) => props.sS\n        .frameSize(Number.parseInt(e.target.value, 10)),\n    },\n    {\n      type: 'number',\n      name: 'Item width',\n      id: 'item',\n      value: props.itemWidth,\n      handleChange: (e: React.ChangeEvent<HTMLInputElement>) => props.sS\n        .itemWidth(Number.parseInt(e.target.value, 10)),\n    },\n    {\n      type: 'number',\n      name: 'Animation duration',\n      id: 'animation',\n      value: props.animationDuration,\n      handleChange: (e: React.ChangeEvent<HTMLInputElement>) => props.sS\n        .animationDuration(Number.parseInt(e.target.value, 10)),\n    },\n    {\n      type: 'boolean',\n      name: 'Infinite',\n      id: 'inf',\n      value: props.infinite,\n      handleChange: (e: React.ChangeEvent<HTMLInputElement>) => props.sS\n        .infinite(Boolean(e.target.checked)),\n    },\n  ];\n\n  return (\n    <div className=\"Options\">\n      {inputs.map(inp => (\n        <Input key={inp.name} {...inp} />\n      ))}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { Options } from './components/Options';\n\nconst App = () => {\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1);\n  const [infinite, setInfinite] = useState(false);\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1\n          className=\"title\"\n          data-cy=\"title\"\n        >\n          {/* eslint-disable-next-line */}\n          Carousel with {images.length} images\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step || 0}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n\n      <Options\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n        sS={{\n          step: setStep,\n          frameSize: setFrameSize,\n          itemWidth: setItemWidth,\n          animationDuration: setAnimationDuration,\n          infinite: setInfinite,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}